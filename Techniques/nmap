

基本主機掃描
掃描主機是否有開機，並且開啟哪些連接埠：

nmap www.hinet.net

使用 IP 位址來指定掃描的主機：

nmap 202.39.253.11

如果加上 -v 參數，會有更詳細的輸出：
nmap -v www.hinet.net

掃描多台主機
如果要一次掃描多台主機，就直接把所有的主機名稱都放進 nmap 的參數中即可：

nmap www.hinet.net tw.yahoo.com www.google.com.tw

您也可以直接使用萬用字元，一次掃描整個子網域：

nmap 192.168.0.*
或是

nmap 192.168.0.0/24
如果您想要掃描 192.168.0.123、192.168.0.124、192.168.0.125 這三台主機，可以寫成這樣：

nmap 192.168.0.123,124,125
如果要掃描子網域中連續的某一段，可以這樣寫：

nmap 192.168.0.123-140

以檔案列表指定主機
nmap 也可以直接從檔案讀取要掃描的主機，假設我們有一個主機列表檔案 hostlist.txt，其內容為：

www.hinet.net
192.168.0.123
www.google.com.tw
然後我們就可以使用 nmap 直接讀取這個檔案內容來進行掃描：

nmap -iL hostlist.txt
排除指定的主機
如果要掃描整個網域，但是要排除某些機器，可以使用 --exclude 參數：

nmap 192.168.0.* --exclude 192.168.0.100
若以檔案方式指定主機，也可以使用 --excludefile 指定排除的列表：

nmap -iL hostlist.txt --excludefile excludelist.txt
偵測作業系統版本
如果要偵測主機的作業系統與各種服務的版本，可以加上 -A 參數：

nmap -A scanme.nmap.org

如果只需要作業系統資訊，可以使用 -O 參數：

nmap -O scanme.nmap.org

若只需要各種服務的版本：

nmap -sV scanme.nmap.org

測試主機是否有防火牆

Nmap 可以透過 TCP ACK 掃描，偵測主機是否有啟用防火牆：

nmap -sA scanme.nmap.org

掃描有防火牆的主機
掃描在防火牆保護下的主機：

nmap -PN scanme.nmap.org

偵測有開機的主機
掃描整個網路，偵測所有有開機的主機（ping scan）：

nmap -sP 140.115.35.0/24

快速掃描
加快掃描的速度：

nmap -F www.hinet.net

nmap -T5 192.168.1.0/24
指定掃描的連接埠
掃描連接埠 80：

nmap -p 80 192.168.1.1

指定 TCP 連接埠 80：
nmap -p T:80 192.168.1.1

指定 UDP 連接埠 53：
nmap -p U:53 192.168.1.1

掃描兩個連接埠：
nmap -p 80,443 192.168.1.1
指定連接埠範圍：

nmap -p 80-200 192.168.1.1
結合各種參數：

nmap -p U:53,111,137,T:21-25,80,139,8080 192.168.1.1
nmap -p U:53,111,137,T:21-25,80,139,8080 server1.cyberciti.biz
nmap -v -sU -sT -p U:53,111,137,T:21-25,80,139,8080 192.168.1.254
掃描前 10 個常用的連接埠：

nmap --top-ports 10 192.168.1.1
查詢主機名稱
只查詢網域中所有的主機名稱，不做任何主機與連接埠的偵測：

nmap -sL 192.168.1.0/24

============================================================
Nmap滲透測試指南
作者： 商廣明
出版社：人民郵電出版社
出版日期：2015/10/01

第1章 Nmap基礎學習 1
1.1 Nmap介紹 1
1.2 Windows下安裝Nmap 2
1.3 Linux/Unix源碼編譯安裝Nmap 5
1.4 Linux通過RPM軟件包安裝Nmap 6
1.5 Mac OS安裝Nmap 6
1.6 Nmap工作原理 8
1.7 Nmap語法 8
1.8 全面掃描 9
1.9 掃描指定段 11
第2章 Nmap主機發現 13
2.1 一次簡單的掃描 14
2.2 使用Zenmap進行掃描 15
2.3 Ping掃描 16
2.4 無Ping掃描 18
2.5 TCP SYN Ping掃描 22
2.6 TCP ACK Ping掃描 25
2.7 UDP Ping掃描 28
2.8 ICMP Ping Types掃描 31
2.9 ARP Ping掃描 34
2.10 掃描列表 35
2.11 禁止反向域名解析 37
2.12 反向域名解析 39
2.13 使用系統域名解析器 40
2.14 掃描一個IPv6地址 42
2.15 路由跟蹤 43
2.16 SCTP INIT Ping掃描 46
第3章 探索網絡 48
3.1 端口介紹 49
3.2 端口掃描介紹 50
3.3 從Nmap識別端口狀態 51
3.4 時序選項 52
3.5 常用掃描方式 58
3.6 TCP SYN掃描 62
3.7 TCP連接掃描 64
3.8 UDP掃描 65
3.9 隱蔽掃描 67
3.10 TCP ACK掃描 70
3.11 TCP窗口掃描 72
3.12 TCP Maimon掃描 77
3.13 自定義TCP掃描 78
3.14 空閑掃描 80
3.15 IP協議掃描 82
3.16 FTP Bounce掃描 83
第4章 指紋識別與探測 85
4.1 服務識別及版本探測 86
4.2 版本探測 87
4.3 全端口版本探測 91
4.4 設置掃描強度 92
4.5 輕量級掃描 94
4.6 重量級掃描 95
4.7 獲取詳細版本信息 97
4.8 RPC掃描 100
4.9 操作系統探測 101
4.10 啟用操作系統探測 102
4.11 對指定的目標進行操作系統檢測 104
4.12 推測系統並識別 106
第5章 伺機而動 109
5.1 定時選項 110
5.2 調整並行掃描組的大小 110
5.3 調整探測報文的並行度 113
5.4 調整探測報文超時 115
5.5 放棄緩慢的目標主機 118
5.6 調整報文適合時間間隔 121
第6章 防火牆/IDS逃逸 124
6.1 關於防火牆/IDS 125
6.2 報文分段 126
6.3 指定偏移大小 128
6.4 IP欺騙 129
6.5 源地址欺騙 133
6.6 源端口欺騙 134
6.7 指定發包長度 135
6.8 目標主機隨機排序 137
6.9 MAC地址欺騙 138
第7章 信息搜集 141
7.1 信息搜集 142
7.2 IP信息搜集 142
7.3 WHOIS查詢 144
7.4 搜集E-mail信息 147
7.5 IP反查 149
7.6 DNS信息搜集 150
7.7 檢索系統信息 153
7.8 后台打印機服務漏洞 155
7.9 系統漏洞掃描 156
7.10 掃描Web漏洞 157
7.11 通過Snmp列舉Windows
服務/賬戶 159
7.12 枚舉DNS服務器的主機名 160
7.13 HTTP信息搜集 164
7.14 枚舉SSL密鑰 167
7.15 SSH服務密鑰信息探測 170
第8章 數據庫滲透測試 172
8.1 MySQL列舉數據庫 173
8.2 列舉MySQL變量 175
8.3 檢查MySQL密碼 178
8.4 審計MySQL密碼 180
8.5 審計MySQL安全配置 182
8.6 審計Oracle密碼 184
8.7 審計msSQL密碼 186
8.8 檢查msSQL空密碼 187
8.9 讀取msSQL數據 188
8.10 msSQL執行系統命令 189
8.11 審計PgSQL密碼 191
第9章 滲透測試 193
9.1 審計HTTP身份驗證 194
9.2 審計FTP服務器 195
9.3 審計Wordpress程序 197
9.4 審計Joomla程序 199
9.5 審計郵件服務器 201
9.6 審計SMB口令 202
9.7 審計VNC服務器 204
9.8 審計SMTP服務器 205
9.9 檢測Stuxnet蠕蟲 207
9.10 SNMP安全審計 209
第10章 Zenmap應用 213
10.1 Zenmap介紹 213
10.2 Zenmap基本配置 214
10.3 Zenmap掃描模板 217
10.4 Ports/Hosts標簽 222
10.5 Topology標簽 223
10.6 Host Details標簽 224
10.7 Scans標簽 224
10.8 編輯掃描模板 225
10.9 新建掃描模板 226
第11章 Nmap技巧 229
11.1 發送以太網數據包 230
11.2 網絡層發送 231
11.3 假定擁有所有權 233
11.4 在交互模式中啟動 234
11.5 查看Nmap版本號 235
11.6 設置調試級別 236
11.7 跟蹤發送接受的報文 239
11.8 列舉接口和路由 241
11.9 指定網絡接口 242
11.10 繼續中斷掃描 244
11.11 Nmap的分布式實現
——Dnmap 246
11.12 編寫Nse腳本 248
11.13 探測防火牆 252
11.14 VMWare認證破解 253
第12章 Nmap保存和輸出 255
12.1 保存和輸出 256
12.2 標准保存 256
12.3 XML保存 258
12.4 133t保存 260
12.5 Grep保存 261
12.6 保存到所有格式 263
12.7 補充保存文件 264
12.8 轉換XML保存 266
12.9 忽略XML聲明的XSL樣式表 267
=====================================================================
諸神之眼：Nmap網絡安全審計技術揭秘
作者： 李華峰
出版社：清華大學出版社
出版日期：2017/09/01
第1章 走近Nmap 1
1.1 Nmap簡介 2
1.2 Nmap的下載與安裝 3
1.2.1 在Windows系統下安裝與下載Nmap 3
1.2.2 在Linux系統下安裝Nmap 6
1.3 Nmap的基本操作 6
1.4 掃描范圍的確定 7
1.4.1 對連續范圍內的主機進行掃描 7
1.4.2 對整個子網進行掃描 8
1.4.3 對多個不連續的主機進行掃描 8
1.4.4 在掃描的時候排除指定的目標 9
1.4.5 對一個文本文件中的地址列表進行掃描 9
1.4.6 隨機確定掃描目標 10
小結 10

第2章 活躍主機發現技術 11
2.1 活躍主機發現技術簡介 12
2.2 網絡協議與主機發現技術 12
2.3 基於ARP協議的活躍主機發現技術 14
2.3.1 ARP協議解析 14
2.3.2 在Nmap中使用ARP協議進行主機發現 16
2.4 基於ICMP協議的活躍主機發現技術 18
2.4.1 ICMP協議解析 18
2.4.2 使用ICMP協議進行主機發現 19
2.5 基於TCP協議的活躍主機發現技術 22
2.5.1 TCP協議解析 22
2.5.2 使用TCP協議進行主機發現 23
2.6 基於UDP協議的活躍主機發現技術 29
2.6.1 UDP協議解析 29
2.6.2 使用UDP協議進行主機發現 30
2.7 基於SCTP協議的活躍主機發現技術 31
2.7.1 SCTP協議解析 31
2.7.2 使用SCTP協議進行主機發現 31
2.8 使用IP協議進行主機地址發現 32
2.9 Nmap活躍主機發現中與DNS協議相關的選項 33
2.9.1 DNS協議解析 33
2.9.2 Nmap中的DNS選項 34
2.10 主機發現技術的分析 36

第3章 端口掃描技術 39
3.1 端口的概念 39
3.2 端口的分類 40
3.3 Nmap中對端口狀態的定義 41
3.4 Nmap中的各種端口掃描技術 41
3.4.1 SYN掃描 42
3.4.2 Connect掃描 43
3.4.3 UDP掃描 43
3.4.4 TCP FIN掃描 44
3.4.5 NULL掃描 44
3.4.6 Xmas Tree掃描 45
3.4.7 idle掃描 45
3.5 指定掃描的端口 46

第4章 遠程操作系統與服務檢測技術 49
4.1 遠程操作系統檢測簡介 50
4.2 操作系統指紋簡介 51
4.3 操作系統指紋掃描作為管理工具 52
4.4 為什麼要進行服務發現 57
4.5 如何使用Nmap進行服務發現 60

第5章 Nmap的圖形化操作工具—Zenmap 63
5.1 Zenmap簡介 63
5.2 啟動Zenmap 64
5.3 Zenmap掃描操作 68
5.4 使用Zenmap的命令向導來創建命令 69
5.5 對Zenmap的配置進行管理 75
5.6 對Zenmap掃描的結果進行管理和比較 76
5.7 Zenmap中的拓撲功能 82

第6章 Nmap的高級技術與防御措施 84
6.1 Nmap的偽裝技術 84
6.2 TCP Connect掃描的檢測 93
6.3 操作系統掃描的防范 96
6.4 Nmap的格式化輸出 96


=========================================================================
第7章 NSE的基礎部分 101
7.1 NSE腳本的運行 102
7.1.1 NSE中腳本的分類 102
7.1.2 NSE腳本的選擇 103
7.2 如何向NSE腳本傳遞參數 105
7.2.1 NSE中傳遞參數的方式 105
7.2.2 從文件中載入腳本的參數 106
7.2.3 NSE腳本調試 107
7.4 NSE常見腳本的應用 109
7.4.1 信息收集類腳本 109
7.4.2 高級主機發現類腳本 111
7.4.3 密碼審計類腳本 112
7.4.4 漏洞掃描類腳本 114

第8章 NSE的編寫基礎 117
8.1 NSE腳本的基本格式 117
8.2 NSE腳本的規則 118
8.3 NSE開發環境的設置 119
8.4 編寫簡單的NSE腳本 123
8.5 實例應用：垃圾郵件木馬的檢測 127

第9章 Lua語言 129
9.1 Lua的編程環境 130
9.1.1 在Windows系統上安裝Lua編程環境 130
9.1.2 在Linux系統上安裝Lua編程環境 130
9.2 第一個Lua程序 131
9.3 Lua流程控制 132
9.4 Lua中的循環結構 133
9.5 Lua數據類型 135
9.6 Lua字符串 136
9.7 Lua文件I/O操作 142
9.8 Lua協同程序 144
9.8.1 什麼是協同程序 144
9.8.2 線程和協同程序的區別 144
9.8.3 coroutine基本語法 144
9.9 Lua語言中的注釋和虛變量 145
9.9.1 Lua語言中的注釋說明 145
9.9.2 Lua語言中的虛變量 145

第10章 NSE中的API 147
10.1 Nmap API 147
10.1.1 host table 148
10.1.2 port table 154
10.2 NSE中的異常處理 157
10.3 NSE中的注冊表 159

第11章 NSE中的庫文件 160
11.1 NSE庫文件的編寫 161
11.2 擴展一個現有NSE庫文件的功能 163
11.3 使用C/C++編寫的NSE模塊 168
11.4 常見的NSE庫文件 170
11.4.1 shortport 170
11.4.2 http 173
11.4.3 stdNSE 176
11.4.4 OpenSSL 176
11.4.5 target 177
11.4.6 creds 177
11.4.7 vluns 177

第12章 對服務發現功能進行增強 179
12.1 NSE中的服務發現模式 179
12.1.1 服務發現的過程 180
12.1.2 調整版本掃描的級別 180
12.1.3 更新版本偵測探針數據庫 181
12.1.4 從版本檢測中排除指定端口 181
12.1.5 post-processors簡介 182
12.2 自定義版本檢測腳本 182
12.2.1 將腳本的分類定義為version檢測 182
12.2.2 定義版本檢測腳本的portrule 182
12.2.3 更新端口服務版本信息 183
12.3 服務發現腳本的實例 184
12.3.1 modbus-discover 184
12.3.2 ventrilo-info 185
12.3.3 rpc-grind 187

第13章 NSE中的數據文件 189
13.1 Nmap中數據文件所在的位置 190
13.2 Nmap中選擇數據文件的順序 190
13.3 暴力窮舉時所使用的用戶名和密碼列表數據文件 190
13.3.1 用戶名數據文件 190
13.3.2 密碼數據文件 191
13.4 Web應用審計數據文件 191
13.4.1 http-fingerprints.lua 191
13.4.2 http-sql-errors.lst 192
13.4.3 http-web-files-extensions.lst 192
13.4.4 http-devframework-fingerprints.lua 193
13.4.5 http-folders.txt 193
13.4.6 vhosts-default.lst 194
13.4.7 wp-plugins.lst 194
13.5 DBMS-auditing數據文件 195
13.5.1 mysql-cis.audit 195
13.5.2 oracle-default-accounts.lst 196
13.5.3 oracle-sids 196

第14章 密碼審計腳本的開發 198
14.1 使用NSE庫進行工作 199
14.1.1 NSE中brute模式的設定 199
14.1.2 NSE中Driver類的實現 200
14.1.3 NSE中庫文件和用戶選項的傳遞 202
14.1.4 NSE中通過Account對象返回有效的賬戶 203
14.1.5 NSE中使用Error類來處理異常 204
14.2 使用unpwdb NSE庫讀取用戶名和密碼信息 204
14.3 對掃描中得到的用戶憑證進行管理 205
14.4 針對FTP的密碼審計腳本 205
14.5 針對MikroTik RouterOS API的密碼審計腳本 208

第15章 漏洞審計與滲透腳本的編寫 213
15.1 Nmap中的漏洞掃描功能 213
15.2 NSE中的exploit腳本 215
15.3 RealVNC的滲透腳本 217
15.4 Windows系統漏洞的檢測 218
15.5 對heartbleed漏洞進行滲透 220
15.6 vulns庫中的漏洞功能 224

第16章 NSE的並發執行 228
16.1 Nmap中的並發執行 228
16.2 Nmap中的時序模式 229
16.3 Lua中的並發執行 230
16.4 NSE中的並發執行 235
16.4.1 NSE中的線程 236
16.4.2 NSE中的條件變量 236
16.4.3 NSE中的互斥變量 238

